// Code generated by "stringer -type=Token -trimprefix=Token"; DO NOT EDIT.

package semantic

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenComment-0]
	_ = x[TokenMethod-1]
	_ = x[TokenMacro-2]
	_ = x[TokenVariable-3]
	_ = x[TokenString-4]
	_ = x[TokenOperator-5]
	_ = x[TokenTypeParameter-6]
	_ = x[TokenKeyword-7]
	_ = x[TokenProperty-8]
	_ = x[TokenFunction-9]
	_ = x[TokenParameter-10]
	_ = x[TokenNone-11]
}

const _Token_name = "CommentMethodMacroVariableStringOperatorTypeParameterKeywordPropertyFunctionParameterNone"

var _Token_index = [...]uint8{0, 7, 13, 18, 26, 32, 40, 53, 60, 68, 76, 85, 89}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
